

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Yoon-Min</title>
  <subtitle>모르는 게 많으니까 기록하는 공간</subtitle>
  <updated>2025-03-28T23:34:29+09:00</updated>
  <author>
    <name>SeungMinYoon</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator>
  <rights> © 2025 SeungMinYoon </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Android Compose UI State - MutableState  상태 자동 업데이트</title>
    <link href="http://localhost:4000/posts/ComposeStateDetection/" rel="alternate" type="text/html" title="Android Compose UI State - MutableState  상태 자동 업데이트" />
    <published>2025-03-28T00:00:00+09:00</published>
  
    <updated>2025-03-28T23:23:52+09:00</updated>
  
    <id>http://localhost:4000/posts/ComposeStateDetection/</id>
    <content src="http://localhost:4000/posts/ComposeStateDetection/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="Android" />
    
    <category term="Compose" />
    
  

  
    <summary>
      





      사진: Unsplash의Bryan Brittos

​

Compose UI State 포스팅 현황


  Android Compose UI State - Sanpshot 시스템
  Android Compose UI State - 어떻게 MutableState의 변경사항은 자동으로 처리될 수 있을까?  


​

Intro

지난 포스팅에서 스냅샷 개념을 이야기했습니다. 스냅샷을 간단하게 복습해 보면 특정 상태의 시점을 저장하여 독립적으로 해당 시점을 활용할 수 있는 객체입니다. 이러한 특징으로 깃(Git)과 유사하다는 언급도 했었는데요, 이번 글에서는 스냅샷 기반으로 동작하는 가변 상태 객체에 대해서 정리해 보겠습니다.

시작하기 앞서 가볍게 MutableState 개념에 대해서 짚고 넘어가겠습니다. ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Android Compose UI State - Sanpshot 시스템</title>
    <link href="http://localhost:4000/posts/ComposeSnapshot/" rel="alternate" type="text/html" title="Android Compose UI State - Sanpshot 시스템" />
    <published>2025-03-02T00:00:00+09:00</published>
  
    <updated>2025-03-28T23:23:52+09:00</updated>
  
    <id>http://localhost:4000/posts/ComposeSnapshot/</id>
    <content src="http://localhost:4000/posts/ComposeSnapshot/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="Android" />
    
    <category term="Compose" />
    
  

  
    <summary>
      





      사진: Unsplash의sarandy westfall

​

Compose UI State 포스팅 현황


  Android Compose UI State - Sanpshot 시스템
  Android Compose UI State - 어떻게 MutableState의 변경사항은 자동으로 처리될 수 있을까?


​

Intro

안드로이드의 최신 UI 제작 킷인 컴포즈는 상태를 등록하면 자동으로 관찰 및 수정을 처리하는 특징을 가지고 있습니다. 덕분에 컴포즈를 사용하는 개발자는 단순히 상태를 전달하기만 하면 되고, 상태가 변경됐을 때 이를 적용하는 수고를 컴포즈 런타임이 대신합니다. 이를 가능하게 만드는 대표 객체중 하나가 MutableState 입니다. 해당 상태 객체에 값을 저장하고 UI 데이터로 초기...
    </summary>
  

  </entry>

  
  <entry>
    <title>Github Action 버전 마이그레이션 - Deprecation notice v3 of the artifact actions</title>
    <link href="http://localhost:4000/posts/GithubActionIssue/" rel="alternate" type="text/html" title="Github Action 버전 마이그레이션 - Deprecation notice v3 of the artifact actions" />
    <published>2025-02-06T00:00:00+09:00</published>
  
    <updated>2025-02-06T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/GithubActionIssue/</id>
    <content src="http://localhost:4000/posts/GithubActionIssue/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="블로그" />
    
    <category term="Github 블로그 만들기" />
    
  

  
    <summary>
      





      Github Action 오류 발생

깃허브 블로그 글을 포스팅하기 위해 깃허브 액션을 사용하던 도중 해당 오류를 마주했습니다. 확인해 보니 action/upload-artifact 의 새 버전을 사용하라는 내용이었습니다.



​

Deprecation notice: v3 of the artifact actions


  Starting January 30th, 2025, GitHub Actions customers will no longer be able to use v3 of actions/upload-artifact or actions/download-artifact. Customers should update workflows to begin using v4 of the artifact act...
    </summary>
  

  </entry>

  
  <entry>
    <title>Github 블로그 로컬 에러 - Address already in use - bind(2) for 127.0.0.1:4000 (Errno::EADDRINUSE)</title>
    <link href="http://localhost:4000/posts/GitHhubBlogLocalError/" rel="alternate" type="text/html" title="Github 블로그 로컬 에러 - Address already in use - bind(2) for 127.0.0.1:4000 (Errno::EADDRINUSE)" />
    <published>2025-02-06T00:00:00+09:00</published>
  
    <updated>2025-02-06T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/GitHhubBlogLocalError/</id>
    <content src="http://localhost:4000/posts/GitHhubBlogLocalError/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="블로그" />
    
    <category term="Github 블로그 만들기" />
    
  

  
    <summary>
      





      로컬 주소로 구동중에 실수로 비정상 종료를 했다면?

깃허브 블로그 포스팅을 위해 로컬 주소를 구동하던 중 실수로 Control + Z와 같은 비정상 종료가 발생한다면 높은 확률로 이후 로컬 서버 구동 시도에서 다음과 같은 오류가 발생할 것입니다. 강제로 구동을 멈췄을 뿐이지 프로세스는 아직 활동하고 있다는 뜻입니다.

Address already in use - bind(2) for 127.0.0.1:4000


​

해결 방법 - 프로세스를 종료하자

해결 방법은 해당 로컬 주소 구동을 도와주는 프로세스를 강제로 종료하는 것입니다.


  
    현재 로컬 주소 구동을 담당하는 프로세스 탐색 (TCP 포트에 따라서 3000 혹은 4000 구분)

    lsof -wni tcp:4000
    
...
    </summary>
  

  </entry>

  
  <entry>
    <title>Android Compose Navigation 02 - NavGraph 생성과정</title>
    <link href="http://localhost:4000/posts/ComposeNavigation2/" rel="alternate" type="text/html" title="Android Compose Navigation 02 - NavGraph 생성과정" />
    <published>2025-01-30T00:00:00+09:00</published>
  
    <updated>2025-03-28T23:23:52+09:00</updated>
  
    <id>http://localhost:4000/posts/ComposeNavigation2/</id>
    <content src="http://localhost:4000/posts/ComposeNavigation2/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="Android" />
    
    <category term="라이브러리" />
    
  

  
    <summary>
      





      사진: Unsplash의Jordan Madrid

​

Compose Navigation 포스팅 현황


  Android Compose Navigation 01 - 컴포즈 내비게이션 소개
  Android Compose Navigation 02 - NavGraph 생성과정
  Android Compose Navigation 03 - Navigator (예정)


​

Intro

지난 포스팅에서 Compose Navigation에 대해 간단하게 소개하는 시간을 가졌습니다. 이를 통해 NavHost 내부에 NavController와 NavGraph를 가지고 내비게이션을 생성하는 것을 알았습니다. 이번 포스팅은 좀 더 들어가서 NavHost 내부에 생성되는 NavGraph에 대해 알아보겠습니다.

​

...
    </summary>
  

  </entry>

</feed>


