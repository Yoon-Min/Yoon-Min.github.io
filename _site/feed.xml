

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Yoon-Min</title>
  <subtitle>모르는 게 많으니까 기록하는 공간</subtitle>
  <updated>2025-01-05T16:45:49+09:00</updated>
  <author>
    <name>SeungMinYoon</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.1">Jekyll</generator>
  <rights> © 2025 SeungMinYoon </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Goodbye, 2024! Welcome, 2025! - [2024년 개발 회고]</title>
    <link href="http://localhost:4000/posts/Review2024/" rel="alternate" type="text/html" title="Goodbye, 2024! Welcome, 2025! - [2024년 개발 회고]" />
    <published>2025-01-03T12:00:00+09:00</published>
  
    <updated>2025-01-03T12:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/Review2024/</id>
    <content src="http://localhost:4000/posts/Review2024/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="블로그" />
    
    <category term="회고록" />
    
  

  
    <summary>
      





      사진: Unsplash의Annie Spratt

2025년을 맞이하며

1년 주기로 기록하는 개발 회고를 시작한지 벌써 2년이 지났다. 23년 회고를 포스팅하고 이것저것 해오던 것들을 마무리하다 보니 벌써 끝자락에 다다른 24년을 마주하고 있었다. 크게 이룬 것 하나 없는데 2024년과 작별해야 한다는 것이 참으로 쓸쓸하면서도 걱정스럽기도 했다.

간략하게 되돌아 보면 24년은 내 기존 역량과 마음가짐을 좀 더 다듬을 수 있었던 해였다. 현재 내 수준을 점검하고 좀 더 발전이 필요한 부분을 확인하여 부족한 점을 채우기 위해 다양한 활동을 했다. 그렇다면 그 활동들이 모두 성공이었나? 하고 묻는다면 반은 실패했고 반은 성공했다고 답변할 수 있을 것 같다.

이번에 실패가 많았던 요인은 아마 인생의 다음 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>24년 3회 정보처리기사 합격 회고</title>
    <link href="http://localhost:4000/posts/CertificationReview1/" rel="alternate" type="text/html" title="24년 3회 정보처리기사 합격 회고" />
    <published>2025-01-03T12:00:00+09:00</published>
  
    <updated>2025-01-03T12:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/CertificationReview1/</id>
    <content src="http://localhost:4000/posts/CertificationReview1/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="블로그" />
    
    <category term="회고록" />
    
  

  
    <summary>
      





      전공자의 정보처리기사 도전기

정보처리기사 시험을 준비하면서 한 가지 깨달은 게 있다. 이건 절대 두 번은 응시 못한다. 컴퓨터랑 키보드 두드리면서 편하게 공부하다가 실물 책 스륵스륵 넘기면서 인쇄된 텍스트를 보면서 공부하려 하니 벽을 느꼈다. 그래서 최대한 집중해서 1회차에 합격하고 바로 미련없이 떠나자는 마음으로 공부했다.

결론은 어떻게 됐는가? 결국 재시험 없이 첫 시도에 필기와 실기, 둘 다 합격하여 정보처리기사 자격증을 받았다. 필기는 대략 2주, 실기는 한 달이라는 넉넉한 기간을 잡고 공부했던 것 같다. 원래 전공자 기준에서는 이보다 더 짧게 공부해도 충분히 합격할 수 있지만, 나는 변수를 만들고 싶지 않아 확실하고 안정적인 합격을 위해 이론 파트에 시간을 많이 투자했다.

이론 파트에 투...
    </summary>
  

  </entry>

  
  <entry>
    <title>Android Compose Navigation 01 - 컴포즈 내비게이션 소개</title>
    <link href="http://localhost:4000/posts/ComposeNavigationInro/" rel="alternate" type="text/html" title="Android Compose Navigation 01 - 컴포즈 내비게이션 소개" />
    <published>2024-09-01T00:00:00+09:00</published>
  
    <updated>2024-09-01T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/ComposeNavigationInro/</id>
    <content src="http://localhost:4000/posts/ComposeNavigationInro/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="Android" />
    
    <category term="라이브러리" />
    
  

  
    <summary>
      





      Unsplash의Katie Drazdauskaite

​

Compose Navigation 포스팅 현황


  Android Compose Navigation 01 - 컴포즈 내비게이션 소개
  Android Compose Navigation 02 - NavGraph 생성과정 (예정)
  Android Compose Navigation 03 - Navigator (예정)


​

Intro

화면 이동은 모바일 애플리케이션에서 중요한 요소입니다. 당장 우리가 일상에서 사용하는 앱을 살펴봐도 단순히 하나의 화면만 있는 것이 아닌 여러 화면을 통해 사용자에게 다양한 서비스를 제공하는 것을 볼 수 있습니다. 모바일 운영체제 중 하나인 Android도 마찬가지입니다.

그래서 Android는 이러한 화면 이...
    </summary>
  

  </entry>

  
  <entry>
    <title>GitHub Blog 간편하고 빠르게 꾸며보자 - 깃허브 블로그 커스터마이징 팁</title>
    <link href="http://localhost:4000/posts/GitHubBlogCustom/" rel="alternate" type="text/html" title="GitHub Blog 간편하고 빠르게 꾸며보자 - 깃허브 블로그 커스터마이징 팁" />
    <published>2024-08-23T00:00:00+09:00</published>
  
    <updated>2024-08-23T21:44:05+09:00</updated>
  
    <id>http://localhost:4000/posts/GitHubBlogCustom/</id>
    <content src="http://localhost:4000/posts/GitHubBlogCustom/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="블로그" />
    
    <category term="Github 블로그 만들기" />
    
  

  
    <summary>
      





      Unsplash의Krishdiphong Prayoonwongkasem

Intro

깃허브 블로그의 장점중 하나는 블로그 테마를 본인 입맛대로 커스터마이징할 수 있다는 것입니다. 깃허브 블로그를 제작하는 과정은 본인이 마음에 드는 템플릿(테마) 파일을 받아서 초기화를 진행한 후에 깃허브를 통해 배포하는 것이 일반적이라 봅니다.

블로그를 오픈하는 과정하는 설명대로 따라가면 수월하게 할 수 있습니다만 이후의 블로그 관리는 조금 어려울 수 있습니다. 아이러니하게도 제가 블로그 관리에서 가장 어려움을 느꼈던 부분은 깃허브 블로그의 최고 장점이라 할 수 있는 커스터마이징 부분이었습니다.

아무래도 모바일 개발을 주력으로 하다 보니 웹 개발과 관련된 개념에 무지했고 이 때문에 깃허브 블로그 테마 폴더 구조 파악...
    </summary>
  

  </entry>

  
  <entry>
    <title>Android - 내부 동작으로 살펴보는 LiveData 값 설정부터 전달까지 과정</title>
    <link href="http://localhost:4000/posts/AndroidLiveDataSetValue/" rel="alternate" type="text/html" title="Android - 내부 동작으로 살펴보는 LiveData 값 설정부터 전달까지 과정" />
    <published>2024-08-18T00:00:00+09:00</published>
  
    <updated>2024-08-18T17:05:16+09:00</updated>
  
    <id>http://localhost:4000/posts/AndroidLiveDataSetValue/</id>
    <content src="http://localhost:4000/posts/AndroidLiveDataSetValue/" />
    <author>
      <name>yoonmin</name>
    </author>

  
    
    <category term="Android" />
    
    <category term="라이브러리" />
    
  

  
    <summary>
      





      사진: Unsplash의Jr Korpa

Intro

안드로이드의 LiveData 라이브러리를 사용하다 보면 라이브 데이터를 구독하고 있는 컴포넌트가 어떻게 값 변경에 대한 알림을 받는지 궁금할 수 있습니다. 저도 해당 라이브러리를 사용하면서 이 부분이 궁금했습니다. 그래서 라이브 데이터의 내부 코드를 분석하여 이를 정리하고자 합니다.

​

Observe



라이브 데이터는 보통 ViewModel 에서 생성 및 업데이트를 관리합니다. 그리고 이러한 변경사항을 라이브 데이터의 구독자인 액티비티 혹은 프래그먼트가 전달받습니다. 이러한 알림 수신이 가능한 이유는 라이브 데이터가 가지고 있는 observe 함수 덕분입니다.



라이브 데이터를 구독할 수 있는 observe 메서드는 라이브 데이터 클래스 ...
    </summary>
  

  </entry>

</feed>


